datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  role      Role      @default(USER)
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String
  quotes    Quote[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Company {
  id        String    @id @default(uuid())
  name      String
  logo      String?
  address   String?
  phone     String?
  email     String?
  users     User[]
  quotes    Quote[]
  catalog   CatalogItem[]
}

model Quote {
  id            String      @id @default(uuid())
  quoteNumber   String      @unique
  title         String?
  date          DateTime    @default(now())
  validUntil    DateTime?
  status        QuoteStatus @default(DRAFT)
  currency      String      @default("ILS")
  subtotal      Float
  discount      Float       @default(0)
  vat           Float       @default(18)
  shipping      Float       @default(0)
  total         Float
  terms         String?
  notes         String?
  contactName   String?
  contactPhone  String?
  contactEmail  String?
  items         QuoteItem[]
  company       Company     @relation(fields: [companyId], references: [id])
  companyId     String
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model QuoteItem {
  id            String      @id @default(uuid())
  itemNumber    Int
  description   String
  model         String?
  unit          String?
  quantity      Float
  price         Float
  discount      Float       @default(0)
  total         Float
  notes         String?
  quote         Quote       @relation(fields: [quoteId], references: [id], onDelete: Cascade)
  quoteId       String
  catalogItem   CatalogItem? @relation(fields: [catalogItemId], references: [id])
  catalogItemId String?
}

model CatalogItem {
  id          String      @id @default(uuid())
  description String
  model       String?
  unit        String?
  price       Float
  notes       String?
  quoteItems  QuoteItem[]
  company     Company     @relation(fields: [companyId], references: [id])
  companyId   String
}

enum Role {
  USER
  ADMIN
}

enum QuoteStatus {
  DRAFT
  SENT
  ACCEPTED
  REJECTED
  EXPIRED
}